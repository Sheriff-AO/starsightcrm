# Generated by Django 3.1.4 on 2021-01-20 14:04

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Appliance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('desktop', models.IntegerField()),
                ('laptop', models.IntegerField()),
                ('printer', models.IntegerField(blank=True, null=True)),
                ('counting_machine', models.IntegerField(blank=True, null=True)),
                ('scanner', models.IntegerField(blank=True, null=True)),
                ('atms', models.IntegerField(blank=True, null=True)),
                ('tv', models.IntegerField(blank=True, null=True)),
                ('water_dispenser', models.IntegerField(blank=True, null=True)),
                ('exchange_rate_board', models.IntegerField(blank=True, null=True)),
                ('signage_light', models.IntegerField(blank=True, null=True)),
                ('water_pump', models.IntegerField(blank=True, null=True)),
                ('fan', models.IntegerField(blank=True, null=True)),
                ('microwave', models.IntegerField(blank=True, null=True)),
                ('card_printer', models.IntegerField(blank=True, null=True)),
                ('time_stamping_machine', models.IntegerField(blank=True, null=True)),
                ('shredder', models.IntegerField(blank=True, null=True)),
                ('sorting_machine', models.IntegerField(blank=True, null=True)),
                ('fridge', models.IntegerField(blank=True, null=True)),
                ('mantrap_door', models.IntegerField(blank=True, null=True)),
                ('hand_dryer', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Building',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bungalow', models.BooleanField(default=False)),
                ('one_storey', models.BooleanField(default=False)),
                ('two_storey', models.BooleanField(default=False)),
                ('three_storey', models.BooleanField(default=False)),
                ('others', models.BooleanField(default=False)),
                ('building_picture', models.ImageField(default='default1.jpg', upload_to='building_pics')),
                ('roof_picture', models.ImageField(default='default2.jpg', upload_to='roof_pics')),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('Banking & SMEs', 'Banking & SMEs'), ('Commercial & Industries', 'Commercial & Industries')], max_length=200, null=True)),
                ('name', models.CharField(max_length=200, null=True)),
                ('rep_name', models.CharField(max_length=200, null=True)),
                ('designation', models.CharField(max_length=200, null=True)),
                ('phone', models.CharField(max_length=200, null=True)),
                ('email', models.EmailField(max_length=100, null=True)),
                ('num_of_site', models.IntegerField(null=True)),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='CoolingAndPowerInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.TextField(verbose_name='Location')),
                ('existing_qty_split_unit', models.CharField(max_length=50, verbose_name='Existing Split Unit')),
                ('existing_qty_standing_unit', models.CharField(max_length=50, verbose_name='Existing Standing Unit')),
                ('condition_qty_working', models.CharField(max_length=50, verbose_name='Quantity Working')),
                ('condition_qty_faulty', models.CharField(max_length=50, verbose_name='Quantity Faulty')),
                ('required_qty_split_unit', models.IntegerField(verbose_name='Required Split Unit')),
                ('required_qty_standing_unit', models.IntegerField(verbose_name='Required Standing Unit')),
            ],
            options={
                'verbose_name': 'CoolingAndPowerInfo',
                'verbose_name_plural': 'CoolingAndPowerInfos',
            },
        ),
        migrations.CreateModel(
            name='CriticalLoad',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item1', models.CharField(blank=True, max_length=50, null=True)),
                ('item2', models.CharField(blank=True, max_length=50, null=True)),
                ('item3', models.CharField(blank=True, max_length=50, null=True)),
                ('item4', models.CharField(blank=True, max_length=50, null=True)),
                ('item5', models.CharField(blank=True, max_length=50, null=True)),
                ('item6', models.CharField(blank=True, max_length=50, null=True)),
                ('item7', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('position', models.CharField(blank=True, max_length=30, null=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('email', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomerInformation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client', models.CharField(blank=True, max_length=100, null=True)),
                ('site_full_address', models.CharField(blank=True, max_length=120, null=True)),
                ('gps_coordinate', models.CharField(blank=True, max_length=18, null=True)),
                ('contact_person', models.CharField(blank=True, max_length=100, null=True)),
                ('contact_number', models.CharField(blank=True, max_length=18, null=True)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='EPowerSource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('connects_to_grid', models.BooleanField(null=True)),
                ('connects_to_solar', models.BooleanField(null=True)),
                ('connects_to_generator', models.BooleanField(null=True)),
                ('has_dedicated_transformer', models.BooleanField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EquipmentRoom',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('available', models.BooleanField(default=False)),
                ('on_what_floor', models.CharField(blank=True, max_length=18, null=True)),
                ('dimension', models.CharField(blank=True, max_length=10, null=True)),
                ('distance_to_generator', models.CharField(blank=True, max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GeneralComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Generator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genset_1', models.CharField(blank=True, max_length=20, null=True)),
                ('genset_2', models.CharField(blank=True, max_length=20, null=True)),
                ('genset_3', models.CharField(blank=True, max_length=20, null=True)),
                ('transformer', models.CharField(blank=True, max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='InverterBattery',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inverter_1', models.CharField(blank=True, max_length=20, null=True)),
                ('inverter_2', models.CharField(blank=True, max_length=20, null=True)),
                ('inverter_3', models.CharField(blank=True, max_length=20, null=True)),
                ('ups_1', models.CharField(blank=True, max_length=20, null=True)),
                ('ups_2', models.CharField(blank=True, max_length=20, null=True)),
                ('ups_3', models.CharField(blank=True, max_length=20, null=True)),
                ('stabilizer_1', models.CharField(blank=True, max_length=20, null=True)),
                ('stabilizer_2', models.CharField(blank=True, max_length=20, null=True)),
                ('battery_bank_1', models.CharField(blank=True, max_length=20, null=True)),
                ('battery_bank_2', models.CharField(blank=True, max_length=20, null=True)),
                ('battery_bank_3', models.CharField(blank=True, max_length=20, null=True)),
                ('battery_bank_4', models.CharField(blank=True, max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Lighting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('florescent', models.CharField(blank=True, max_length=20, null=True)),
                ('LED', models.CharField(blank=True, max_length=20, null=True)),
                ('halogen', models.CharField(blank=True, max_length=20, null=True)),
                ('energy_saver', models.CharField(blank=True, max_length=20, null=True)),
                ('panel_light', models.CharField(blank=True, max_length=20, null=True)),
                ('others', models.CharField(blank=True, max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MountingPlane',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rooftop', models.CharField(blank=True, max_length=20, null=True)),
                ('ground_mounted', models.CharField(blank=True, max_length=20, null=True)),
                ('rooftop_ground_mounted', models.CharField(blank=True, max_length=20, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='OperationHour',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('opening_time', models.CharField(blank=True, max_length=6, null=True)),
                ('closing_time', models.CharField(blank=True, max_length=6, null=True)),
                ('monday_to_friday', models.BooleanField(default=False)),
                ('monday_to_saturday', models.BooleanField(default=False)),
                ('monday_to_sunday', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='RoofInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('roof_dimension', models.CharField(blank=True, max_length=20, null=True)),
                ('total_area', models.IntegerField()),
                ('number_of_panels', models.IntegerField()),
                ('roof_type', models.CharField(blank=True, max_length=20, null=True)),
                ('roofing_sheet_material', models.CharField(blank=True, max_length=20, null=True)),
                ('roofing_sheet_thickness', models.CharField(blank=True, max_length=20, null=True)),
                ('roofing_sheet_lapping', models.CharField(blank=True, max_length=20, null=True)),
                ('roofing_truss', models.CharField(blank=True, max_length=20, null=True)),
                ('general_comment', models.TextField(blank=True, max_length=300, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Starsight',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('position', models.CharField(blank=True, max_length=30, null=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('email', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, null=True)),
                ('rep_name', models.CharField(max_length=100, null=True)),
                ('designation', models.CharField(max_length=100, null=True)),
                ('contact_number', models.CharField(max_length=16, null=True)),
                ('email', models.EmailField(max_length=100, null=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='vendor', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('branch', models.CharField(max_length=50, null=True)),
                ('address', models.TextField(max_length=200, null=True)),
                ('state', models.CharField(max_length=20, null=True)),
                ('region', models.CharField(max_length=4, null=True)),
                ('contact_person', models.CharField(max_length=100, null=True)),
                ('designation', models.CharField(max_length=100, null=True)),
                ('email', models.EmailField(max_length=100, null=True)),
                ('contact_num', models.CharField(max_length=16, null=True)),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='audits.client')),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_assigned', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('SfA', 'Scheduled for Audit'), ('SfDL', 'Scheduled for Data-logging'), ('SfA&DL', 'Scheduled for Audit & Data-logging'), ('PS', 'Pending Schedule'), ('A', 'Audited'), ('DL', 'Data-logged'), ('A&DL', 'Audited & Data-logged')], max_length=100, null=True)),
                ('report_received', models.BooleanField(default=False)),
                ('sites', models.ManyToManyField(to='audits.Site')),
                ('vendor', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='audits.vendor')),
            ],
        ),
        migrations.CreateModel(
            name='Checklist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appliance', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='audits.appliance', verbose_name='Appliances')),
                ('building', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='audits.building', verbose_name='Description of the Building with pictures')),
                ('cooling_and_power_information', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='audits.coolingandpowerinfo', verbose_name='Cooling and Power Information')),
                ('critical_load', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='audits.criticalload', verbose_name='Critical Loads Details')),
                ('customer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='audits.customer', verbose_name='Customer Representative')),
                ('customer_information', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='audits.customerinformation', verbose_name='Customer Information')),
                ('e_power_source', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='audits.epowersource', verbose_name='Existing Power Sources')),
                ('equipment_room', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='audits.equipmentroom', verbose_name='Equipment Room Details')),
                ('general_comment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='audits.generalcomment', verbose_name='General Comment: ')),
                ('generator', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='audits.generator', verbose_name='Generator & Transformer Details')),
                ('inverter_battery', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='audits.inverterbattery', verbose_name='Inverter/Battery/UPS Details')),
                ('lighting', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='audits.lighting', verbose_name='Lightings')),
                ('mounting_plane', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='audits.mountingplane', verbose_name='Available Mounting Planes')),
                ('operation_hour', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='audits.operationhour', verbose_name='Operation Hour')),
                ('roof_info', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='audits.roofinfo', verbose_name='Roof Information')),
                ('starsight', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='audits.starsight', verbose_name='Starsight Representative')),
            ],
        ),
    ]
